#===============================================================================
#          File: tmux.conf
#        Author: Pedro Ferrari
#       Created: 07 May 2016
# Last Modified: 17 May 2016
#   Description: My Tmux config file
#===============================================================================
# Note: Install latest tmux using `brew install tmux --HEAD`
# TODO: Refactor code to use same flags and options (i.e avoid alias)

# Preamble {{{

# Remap prefix to Control + a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Reload config file with prefix + r
bind a source ~/.tmux.conf \; display-message "Conf reloaded..."

#  }}}
# Options {{{

# Enable mouse
set -g mouse on
bind-key -T root WheelUpPane select-pane -t =\; copy-mode -e\; send-keys -M

# Increase Scrollback/History limit
set -g history-limit 50000

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Don't add delay when pressing meta or escape keys
set -s escape-time 0

# Renumber window automatically when a window is closed
set-option -g renumber-windows on

# Show the session name and the window title in iTerm corresponding tab and
# title
set -g set-titles on
set-option -g set-titles-string "#{session_name} - #W"

# Emacs key bindings in tmux command prompt
set -g status-keys emacs

# Use vim mode in copy mode
setw -g mode-keys vi

# Don't show `Activity in window N` message
set-option -g visual-activity off
set-window-option -g monitor-activity on

#  }}}
# Bindings {{{

# Smart pane switching with awareness of vim splits (use vim-tmux-navigator
# plugin in vim!)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Restore original C-l
bind C-l send-keys 'C-l'

# Split pane using v and h (in the same directory from where they are called).
# For horizontal splits we automatically set the size to 10
unbind '"'
unbind %
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}" \; resize-pane -y 10

# Close pane it with c
bind c kill-pane

# Increase or decrease pane height with h,j,k and l
bind j resize-pane -D 3
bind k resize-pane -U 3
bind h resize-pane -L 3
bind l resize-pane -R 3

# Create new tab (actually a window) with t and kill it with w
bind t new-window
bind w confirm kill-window

# Rename window
bind-key r command-prompt 'rename-window %%'

# From here on we set vi-copy bindings (note: we set the insert and command mode
# mappings directly in our bash profile!)
# Go the beginning and end of line in copy mode
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

# Do visual and block selection as in vim
unbind-key -t vi-copy v
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy 'C-v' rectangle-toggle

# Copy to system clipboard as in vim (both with y and the default `Enter`
# mappings)
# See https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#  }}}
# Colors {{{

# Set term to xterm-256 (note this should match vim `set term` and `set t_Co`
# options!)
set -g default-terminal "xterm-256color"

# Enable 24-bit color support (requires tmux >= 2.2)
# Note to exactly match vim colorscheme we need to modifiy the terminal (iTerm)
# cursor and background colors to match the hex values of those of our vim
# colorscheme
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Pane border (use same color for active and foreground)
set -g pane-border-fg colour245
set -g pane-active-border-fg colour245

# Command mode
set -g message-fg white
set -g message-bg colour236

# Copy mode
set-window-option -g mode-fg white
set-window-option -g mode-bg colour238

# Visual activity
set -g window-status-activity-attr bold
setw -g window-status-activity-fg yellow

#  }}}
# Status line {{{

# Reload status every second
set -g status-interval 1

# Custom status bar similar to powerline (or airline tabline)
set -g status-left-length 32
set -g status-right-length 150
set -g status-fg white
set -g status-bg colour236
set -g status-left '#{?client_prefix,#[fg=colour236]#[bg=colour39]#[bold],#[fg=colour236]#[bg=colour252]#[bold]} #S #{?client_prefix,#[fg=colour39]#[bg=colour236]#[nobold],#[fg=colour252]#[bg=colour236]#[nobold]}'
set -g status-right '#[fg=colour236,bg=colour252,bold] #h '
set -g window-status-format "#[fg=white,bg=colour236, nobold] #I:#W"
set -g window-status-current-format "#[fg=colour236,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I:#W #[fg=colour39,bg=colour236,nobold]"

#  }}}
