#===============================================================================
#          File: tmux.conf
#        Author: Pedro Ferrari
#       Created: 07 May 2016
# Last Modified: 09 Mar 2017
#   Description: My Tmux config file
#===============================================================================
# Note: On Mac install latest tmux using `brew install tmux --HEAD`; on Linux
# build it from source

# Preamble {{{

# Remap prefix to Ctrl-a or Ctr-t depending on OS
is_mac="uname | grep -q Darwin"
if-shell "$is_mac" "set -g prefix C-a" "set -g prefix C-t"
unbind C-b
if-shell "$is_mac" "bind C-a send-prefix" "bind C-t send-prefix"

# Reload config file with prefix + r
bind a source ~/.tmux/tmux.conf \; display-message "Conf reloaded..."

#  }}}
# Options {{{

# Enable mouse
set -g mouse on
bind-key -T root WheelUpPane select-pane -t =\; copy-mode -e\; send-keys -M

# Increase Scrollback/History limit
set -g history-limit 50000

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Don't add delay when pressing meta or escape keys
set -s escape-time 0

# Renumber window automatically when a window is closed
set-option -g renumber-windows on

# Show the session name and the window title in iTerm corresponding tab and
# title
set -g set-titles on
set-option -g set-titles-string "#{session_name} - #W"

# Emacs key bindings in tmux command prompt
set -g status-keys emacs

# Use vim mode in copy mode
setw -g mode-keys vi

# Don't show `Activity in window N` message
set-option -g visual-activity off
set-window-option -g monitor-activity on

#  }}}
# Bindings {{{

# Smart pane switching with awareness of vim splits (use vim-tmux-navigator
# plugin in vim!)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|ssh|mosh|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Restore original C-l mapping (clear screen)
bind C-l send-keys 'C-l'

# Split pane using v and h (in the same directory from where they are called)
# For horizontal splits we automatically set the size to rougly 10 lines
unbind '"'
unbind %
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"\; resize-pane -y 30

# Close pane it with c
bind c kill-pane

# Increase or decrease pane height with h,j,k and l (the -r flag makes it
# repeatable i.e no need to press prefix key again and again)
bind -r j resize-pane -D 3
bind -r k resize-pane -U 3
bind -r h resize-pane -L 3
bind -r l resize-pane -R 3

# Create new buffer/tab (actually a window) with b and kill it with w
bind b new-window
bind w confirm kill-window

# Rename window
bind-key r command-prompt 'rename-window %%'

# Move windows
bind -r C-h swap-window -t -1
bind -r C-l swap-window -t +1

# From here on we set vim copy bindings (note: we set the insert and command
# mode mappings directly in our bash profile!)
# Go the beginning and end of line in copy mode
bind -Tcopy-mode-vi H send -X start-of-line
bind -Tcopy-mode-vi L send -X end-of-line

# Do visual and block selection as in vim (for block selection we need to press
# C-v + space and then start our selection)
unbind-key -Tcopy-mode-vi v
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi 'C-v' send -X rectangle-toggle

# Unbind Enter since we rebind it for copying
unbind-key -Tcopy-mode-vi Enter

# Unbind p since we rebind it to paste
unbind p
unbind n
# Use prefix + C-p to go to the previous window (and C-n to the next one)
bind -r C-p previous-window
bind -r C-n next-window

#  }}}
# Colors {{{

# Set term to xterm-256 (note this should match vim `set term` and `set t_Co`
# options!) with italic fonts. We created a new terminfo by modifying the
# following one to use xterm instead of screen:
    # http://muddygoat.org/articles/italic-terminal-tmux
# Note: we also need to upload the new terminfo when ssh into a remote machine.
# In particular after using tic if the terminal is not found we need to copy it
# to both /lib/terminfo/x directory and $HOME/.terminfo/x/ directory.
set -g default-terminal "xterm-256color-italic"

# Pane border (use same color for active and foreground)
set -g pane-border-fg colour245
set -g pane-active-border-fg colour245

# Command mode
set -g message-fg white
set -g message-bg colour236

# Copy mode
set-window-option -g mode-fg white
set-window-option -g mode-bg colour238

# Visual activity
set -g window-status-activity-attr bold
setw -g window-status-activity-fg yellow

#  }}}
# Status line {{{

# Reload status every second
set -g status-interval 1

# Custom status bar similar to powerline (or airline tabline)
set -g status-left-length 32
set -g status-right-length 156
set -g status-fg white

# For vim heraldish colorscheme
# set -g status-bg colour236
# set -g status-left '#{?client_prefix,#[fg=colour148]#[bg=colour22]#[bold] T #[fg=colour22]#[bg=colour252]#[nobold]#[fg=colour236]#[bg=colour252]#[bold],#[fg=colour236]#[bg=colour252]#[bold]} #S #[fg=colour252]#[bg=colour236]#[nobold]'
# set -g window-status-current-format '#[fg=colour236]#[bg=colour39]#[nobold]#[fg=colour16,bg=colour39,noreverse,bold] #I:#W #[fg=colour39,bg=colour236,nobold]'
# set -g window-status-format '#[fg=white,bg=colour236, nobold] #I:#W'
# set -g status-right '#[fg=colour247,bg=colour236, nobold]#{battery_percentage} #[fg=colour247,bg=colour236, nobold]#[fg=colour247,bg=colour236, nobold] %H:%M #[fg=colour239,bg=colour236,nobold]#[fg=colour250,bg=colour239, nobold] %d %b %Y #[fg=colour252,bg=colour239, nobold]#[fg=colour236,bg=colour252,bold] #h '

# For onedarkish vim colorscheme
set -g status-bg colour236
set -g status-left '#{?client_prefix,#[fg=colour148]#[bg=colour22]#[bold] T #[fg=colour22]#[bg=colour252]#[nobold]#[fg=colour236]#[bg=colour252]#[bold],#[fg=colour236]#[bg=colour252]#[bold]} #S #[fg=colour252]#[bg=colour236]#[nobold]'
set -g window-status-current-format '#[fg=colour236]#[bg=colour39]#[nobold]#[fg=colour236,bg=colour39,noreverse,bold] #I:#W #[fg=colour39,bg=colour236,nobold]'
set -g window-status-format '#[fg=145,bg=colour236, nobold] #I:#W'
set -g status-right '#[fg=colour145,bg=colour236, nobold]#{battery_percentage} #[fg=colour145,bg=colour236, nobold]#[fg=colour145,bg=colour236, nobold] %H:%M #[fg=colour238,bg=colour236,nobold]#[fg=colour250,bg=colour238, nobold] %d %b %Y #[fg=colour252,bg=colour238, nobold]#[fg=colour236,bg=colour252,bold] #h '

#  }}}
#  OS Specific {{{

# Load OS specific extra settings
if-shell "$is_mac" "source ~/.tmux/tmux_mac.conf" "source ~/.tmux/tmux_linux.conf"

#  }}}
#  Plugins {{{

# Auto install tmux plugin manager if it is not installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# List of plugins
set -g @tpm_plugins ' \
    tmux-plugins/tpm \
    tmux-plugins/tmux-copycat \
    tmux-plugins/tmux-battery \
'

# Initialize TMUX plugin manager (this must be the last line of the conf file)
run-shell '~/.tmux/plugins/tpm/tpm'

#  }}}
